# default profile settings
spring:
  profiles:
    active: local
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_REST_API_KEY}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: http://Sajang-dev-env-1.eba-qyu26pwn.ap-northeast-2.elasticbeanstalk.com/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  servlet:
    multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 60MB

JWT_SECRET: ${JWT_SECRET}
JWT_EXPIRATION: ${JWT_EXPIRATION}
JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION}

cloud:
  aws:
    access-key: ${AWS_ACCESS_KEY:default-access-key}
    secret-key: ${AWS_SECRET_KEY:default-secret-key}
    region: ${AWS_REGION:ap-northeast-2}
    bucket: ${AWS_BUCKET:default-bucket}

server:
  tomcat:
    max-swallow-size: -1
    max-http-form-post-size: -1

---

# base datasource (공통 DB설정)
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/sajang_db
    username: sajang_user
    password: sajang_password
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
    operations-sorter: method

---

# local profile
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: ${local.db.url}
    username: ${local.db.username}
    password: ${local.db.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      dialect: org.hibernate.dialect.MySQLDialect
      use_sql_comments: true
      default_batch_fetch_size: 1000

---

# develop profile
spring:
  config:
    activate:
      on-profile: develop
  datasource:
    url: ${aws.db.url}
    username: ${aws.db.username}
    password: ${aws.db.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      dialect: org.hibernate.dialect.MySQLDialect
      use_sql_comments: true
      default_batch_fetch_size: 1000
